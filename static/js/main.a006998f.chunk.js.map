{"version":3,"sources":["components/Dashboard.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["US_STATE_URL","Styles","styled","div","App","state","usTotal","usNew","usTotalDeaths","date","usState","usStateTotal","usStateTotalDeaths","usStateNew","handleSubmit","event","preventDefault","target","elements","value","toLowerCase","fetch","then","response","json","result","setState","positive","death","positiveIncrease","usYesterdayNew","formatDate","unformattedNum","toString","replace","unformattedDate","year","slice","month","day","Date","toDateString","upper","lower","toFixed","input","to","states","txt","charAt","toUpperCase","substr","i","length","Jumbotron","this","className","Form","onSubmit","inline","Group","controlId","Row","Label","Col","Control","required","as","Button","type","variant","Container","Card","Header","Body","Title","formatNumber","Text","abbrState","React","Component","Footer","icon","href","rel","size","library","add","fab","faEnvelope","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a006998f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n// import SubmitForm from \"./SubmitForm\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Jumbotron,\n  Card,\n} from \"react-bootstrap\";\n\nconst US_DAILY_URL = \"https://covidtracking.com/api/v1/us/daily.json\";\nconst US_STATE_URL = \"https://covidtracking.com/api/v1/states/\";\n\nconst Styles = styled.div`\n  form-container {\n    display: block;\n    text-align: center;\n  }\n  form {\n    display: inline-block;\n    margin-left: auto;\n    margin-right: auto;\n    text-align: left;\n  }\n  .jumbotron {\n    text-align: center;\n  }\n\n  .container {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-around;\n  }\n\n  .item {\n    width: 500;\n    margin: 30px;\n    text-align: center;\n    color: #ff7f50;\n  }\n`;\n\nclass App extends React.Component {\n  state = {\n    usTotal: \"\",\n    usNew: \"\",\n    usTotalDeaths: \"\",\n    date: \"\",\n    usState: \"\",\n    usStateTotal: \"\",\n    usStateTotalDeaths: \"\",\n    usStateNew: \"\",\n  };\n\n  componentDidMount() {\n    fetch(US_DAILY_URL)\n      .then((response) => response.json())\n      .then((result) => {\n        this.setState({\n          usTotal: result[0].positive,\n          usNew: result[0].positiveIncrease,\n          usYesterdayNew: result[1].positiveIncrease,\n          usTotalDeaths: result[0].death,\n          date: this.formatDate(result[0].date),\n        });\n      });\n  }\n\n  formatNumber(unformattedNum) {\n    return unformattedNum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  formatDate(unformattedDate) {\n    var year = unformattedDate.toString().slice(0, 4);\n    var month = unformattedDate.toString().slice(4, 6);\n    var day = unformattedDate.toString().slice(6, 8);\n    var date = new Date(year, month - 1, day);\n    return date.toDateString();\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let usState = event.target.elements.usState.value.toLowerCase();\n\n    let url = US_STATE_URL + usState + \"/current.json\";\n    fetch(url)\n      .then((response) => response.json())\n      .then((result) => {\n        this.setState({\n          usState: result.state,\n          usStateTotal: result.positive,\n          usStateTotalDeaths: result.death,\n          usStateNew: result.positiveIncrease,\n        });\n      });\n  };\n\n  getPercentage(upper, lower) {\n    return ((upper / lower) * 100).toFixed(2);\n  }\n\n  abbrState(input, to) {\n    var states = [\n      [\"Arizona\", \"AZ\"],\n      [\"Alabama\", \"AL\"],\n      [\"Alaska\", \"AK\"],\n      [\"Arkansas\", \"AR\"],\n      [\"California\", \"CA\"],\n      [\"Colorado\", \"CO\"],\n      [\"Connecticut\", \"CT\"],\n      [\"District of Columbia\", \"DC\"],\n      [\"Delaware\", \"DE\"],\n      [\"Florida\", \"FL\"],\n      [\"Georgia\", \"GA\"],\n      [\"Hawaii\", \"HI\"],\n      [\"Idaho\", \"ID\"],\n      [\"Illinois\", \"IL\"],\n      [\"Indiana\", \"IN\"],\n      [\"Iowa\", \"IA\"],\n      [\"Kansas\", \"KS\"],\n      [\"Kentucky\", \"KY\"],\n      [\"Louisiana\", \"LA\"],\n      [\"Maine\", \"ME\"],\n      [\"Maryland\", \"MD\"],\n      [\"Massachusetts\", \"MA\"],\n      [\"Michigan\", \"MI\"],\n      [\"Minnesota\", \"MN\"],\n      [\"Mississippi\", \"MS\"],\n      [\"Missouri\", \"MO\"],\n      [\"Montana\", \"MT\"],\n      [\"Nebraska\", \"NE\"],\n      [\"Nevada\", \"NV\"],\n      [\"New Hampshire\", \"NH\"],\n      [\"New Jersey\", \"NJ\"],\n      [\"New Mexico\", \"NM\"],\n      [\"New York\", \"NY\"],\n      [\"North Carolina\", \"NC\"],\n      [\"North Dakota\", \"ND\"],\n      [\"Ohio\", \"OH\"],\n      [\"Oklahoma\", \"OK\"],\n      [\"Oregon\", \"OR\"],\n      [\"Pennsylvania\", \"PA\"],\n      [\"Rhode Island\", \"RI\"],\n      [\"South Carolina\", \"SC\"],\n      [\"South Dakota\", \"SD\"],\n      [\"Tennessee\", \"TN\"],\n      [\"Texas\", \"TX\"],\n      [\"Utah\", \"UT\"],\n      [\"Vermont\", \"VT\"],\n      [\"Virginia\", \"VA\"],\n      [\"Washington\", \"WA\"],\n      [\"West Virginia\", \"WV\"],\n      [\"Wisconsin\", \"WI\"],\n      [\"Wyoming\", \"WY\"],\n    ];\n\n    if (to === \"abbr\") {\n      input = input.replace(/\\w\\S*/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      });\n      for (let i = 0; i < states.length; i++) {\n        if (states[i][0] === input) {\n          return states[i][1];\n        }\n      }\n    } else if (to === \"name\") {\n      input = input.toUpperCase();\n      for (let i = 0; i < states.length; i++) {\n        if (states[i][1] === input) {\n          return states[i][0];\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Styles>\n        <Jumbotron>\n          <h1>COVID-19 Dashboard</h1>\n          <p>As of: {this.state.date}</p>\n          <div className=\"form-container\">\n            <Form onSubmit={this.handleSubmit} inline>\n              <Form.Group controlId=\"usState\">\n                <Form.Row>\n                  <Form.Label>State</Form.Label>\n                  <Col>\n                    <Form.Control required as=\"select\">\n                      <option>AL</option>\n                      <option>AK</option>\n                      <option>AZ</option>\n                      <option>AR</option>\n                      <option>CA</option>\n                      <option>CO</option>\n                      <option>CT</option>\n                      <option>DE</option>\n                      <option>DC</option>\n                      <option>FL</option>\n                      <option>GA</option>\n                      <option>HI</option>\n                      <option>ID</option>\n                      <option>IL</option>\n                      <option>IN</option>\n                      <option>IA</option>\n                      <option>KS</option>\n                      <option>KY</option>\n                      <option>LA</option>\n                      <option>ME</option>\n                      <option>MD</option>\n                      <option>MA</option>\n                      <option>MI</option>\n                      <option>MN</option>\n                      <option>MS</option>\n                      <option>MO</option>\n                      <option>MT</option>\n                      <option>NE</option>\n                      <option>NV</option>\n                      <option>NH</option>\n                      <option>NJ</option>\n                      <option>NM</option>\n                      <option>NY</option>\n                      <option>NC</option>\n                      <option>ND</option>\n                      <option>OH</option>\n                      <option>OK</option>\n                      <option>OR</option>\n                      <option>PA</option>\n                      <option>RI</option>\n                      <option>SC</option>\n                      <option>SD</option>\n                      <option>TN</option>\n                      <option>TX</option>\n                      <option>UT</option>\n                      <option>VT</option>\n                      <option>VA</option>\n                      <option>WA</option>\n                      <option>WV</option>\n                      <option>WI</option>\n                      <option>WY</option>\n                    </Form.Control>\n                  </Col>\n                </Form.Row>\n              </Form.Group>\n              <Form.Group>\n                <Col>\n                  <Button type=\"submit\" variant=\"warning\">\n                    Submit\n                  </Button>\n                </Col>\n              </Form.Group>\n            </Form>\n          </div>\n        </Jumbotron>\n        <Container>\n          <Row>\n            <Col>\n              <Card>\n                <Card.Header as=\"h4\">United States</Card.Header>\n                <Card.Body>\n                  <Card.Title>\n                    Total Cases: <b>{this.formatNumber(this.state.usTotal)}</b>\n                  </Card.Title>\n                  <Card.Text>\n                    Total Deaths:{\" \"}\n                    <b>{this.formatNumber(this.state.usTotalDeaths)}</b>\n                    <br />\n                    New Cases: <b>{this.formatNumber(this.state.usNew)}</b>\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            {this.state.usState !== \"\" && (\n              <Col>\n                <Card>\n                  <Card.Header as=\"h4\">\n                    {this.abbrState(this.state.usState, \"name\")}\n                  </Card.Header>\n                  <Card.Body>\n                    <Card.Title>\n                      Total Cases:{\" \"}\n                      <b>{this.formatNumber(this.state.usStateTotal)}</b>\n                    </Card.Title>\n                    <Card.Text>\n                      Total Deaths:{\" \"}\n                      <b>{this.formatNumber(this.state.usStateTotalDeaths)}</b>\n                      <br />\n                      New Cases:{\" \"}\n                      <b>{this.formatNumber(this.state.usStateNew)}</b>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            )}\n          </Row>\n        </Container>\n      </Styles>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Styles = styled.div`\n    .footer {\n        // padding-left: 20px;\n        // padding-bottom: 5px;\n        // margin-top: 25px;\n        // position: relative;\n        // bottom: 0;\n        // width: 100%;\n        // height: 2em;\n        position: absolute;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        padding-left: 20px;\n        padding-bottom: 20px;\n    }\n\n    .icon {\n        color: black;\n    }\n`;\n\nexport const Footer = () => (\n    <Styles>\n        <footer className=\"footer\">\n        <FontAwesomeIcon icon={[\"far\", \"coffee\"]} />\n            <a className=\"icon\" href=\"https://github.com/ryansmolik03/covid-19-dashboard\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={['fab', 'github']} size=\"2x\" />\n        </a>\n        </footer>\n    </Styles>\n)","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard'\nimport {Footer} from './components/Footer'\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fab, faEnvelope);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}